============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Whitespace
 3      'Comment End'
 4      'Comment Line'
 5      'Comment Start'
 6      '-'
 7      '--'
 8      '!'
 9      '!='
 10     '%'
 11     '&'
 12     '&&'
 13     '&='
 14     '('
 15     ')'
 16     '*'
 17     '*='
 18     ','
 19     '.'
 20     '/'
 21     '/='
 22     ':'
 23     ';'
 24     '?'
 25     '['
 26     ']'
 27     '^'
 28     '^='
 29     '{'
 30     '|'
 31     '||'
 32     '|='
 33     '}'
 34     '~'
 35     '+'
 36     '++'
 37     '+='
 38     '<'
 39     '<<'
 40     '<<='
 41     '<='
 42     '='
 43     '-='
 44     '=='
 45     '>'
 46     '->'
 47     '>='
 48     '>>'
 49     '>>='
 50     auto
 51     break
 52     case
 53     char
 54     CharLiteral
 55     const
 56     continue
 57     DecLiteral
 58     default
 59     do
 60     double
 61     else
 62     enum
 63     extern
 64     float
 65     FloatLiteral
 66     for
 67     goto
 68     HexLiteral
 69     Id
 70     if
 71     int
 72     long
 73     OctLiteral
 74     register
 75     return
 76     short
 77     signed
 78     sizeof
 79     static
 80     StringLiteral
 81     struct
 82     switch
 83     typedef
 84     union
 85     unsigned
 86     void
 87     volatile
 88     while


========================================
Nonterminals
========================================

89      <Arg>
90      <Array>
91      <Base>
92      <Block>
93      <Case Stms>
94      <Decl>
95      <Decls>
96      <Enum Decl>
97      <Enum Def>
98      <Enum Val>
99      <Expr>
100     <Func Decl>
101     <Func ID>
102     <Func Proto>
103     <Id List>
104     <Mod>
105     <Normal Stm>
106     <Op Add>
107     <Op And>
108     <Op Assign>
109     <Op BinAND>
110     <Op BinOR>
111     <Op BinXOR>
112     <Op Compare>
113     <Op Equate>
114     <Op If>
115     <Op Mult>
116     <Op Or>
117     <Op Pointer>
118     <Op Shift>
119     <Op Unary>
120     <Param>
121     <Params>
122     <Pointers>
123     <Scalar>
124     <Sign>
125     <Stm>
126     <Stm List>
127     <Struct Decl>
128     <Struct Def>
129     <Then Stm>
130     <Type>
131     <Typedef Decl>
132     <Types>
133     <Union Decl>
134     <Value>
135     <Var>
136     <Var Decl>
137     <Var Item>
138     <Var List>


========================================
Rules
========================================

0       <Decls> ::= <Decl> <Decls>
1       <Decls> ::= 
2       <Decl> ::= <Func Decl>
3       <Decl> ::= <Func Proto>
4       <Decl> ::= <Struct Decl>
5       <Decl> ::= <Union Decl>
6       <Decl> ::= <Enum Decl>
7       <Decl> ::= <Var Decl>
8       <Decl> ::= <Typedef Decl>
9       <Func Proto> ::= <Func ID> '(' <Types> ')' ';'
10      <Func Proto> ::= <Func ID> '(' <Params> ')' ';'
11      <Func Proto> ::= <Func ID> '(' ')' ';'
12      <Func Decl> ::= <Func ID> '(' <Params> ')' <Block>
13      <Func Decl> ::= <Func ID> '(' <Id List> ')' <Struct Def> <Block>
14      <Func Decl> ::= <Func ID> '(' ')' <Block>
15      <Params> ::= <Param> ',' <Params>
16      <Params> ::= <Param>
17      <Param> ::= const <Type> Id
18      <Param> ::= <Type> Id
19      <Types> ::= <Type> ',' <Types>
20      <Types> ::= <Type>
21      <Id List> ::= Id ',' <Id List>
22      <Id List> ::= Id
23      <Func ID> ::= <Type> Id
24      <Func ID> ::= Id
25      <Typedef Decl> ::= typedef <Type> Id ';'
26      <Struct Decl> ::= struct Id '{' <Struct Def> '}' ';'
27      <Union Decl> ::= union Id '{' <Struct Def> '}' ';'
28      <Struct Def> ::= <Var Decl> <Struct Def>
29      <Struct Def> ::= <Var Decl>
30      <Var Decl> ::= <Mod> <Type> <Var> <Var List> ';'
31      <Var Decl> ::= <Type> <Var> <Var List> ';'
32      <Var Decl> ::= <Mod> <Var> <Var List> ';'
33      <Var> ::= Id <Array>
34      <Var> ::= Id <Array> '=' <Op If>
35      <Array> ::= '[' <Expr> ']'
36      <Array> ::= '[' ']'
37      <Array> ::= 
38      <Var List> ::= ',' <Var Item> <Var List>
39      <Var List> ::= 
40      <Var Item> ::= <Pointers> <Var>
41      <Mod> ::= extern
42      <Mod> ::= static
43      <Mod> ::= register
44      <Mod> ::= auto
45      <Mod> ::= volatile
46      <Mod> ::= const
47      <Enum Decl> ::= enum Id '{' <Enum Def> '}' ';'
48      <Enum Def> ::= <Enum Val> ',' <Enum Def>
49      <Enum Def> ::= <Enum Val>
50      <Enum Val> ::= Id
51      <Enum Val> ::= Id '=' OctLiteral
52      <Enum Val> ::= Id '=' HexLiteral
53      <Enum Val> ::= Id '=' DecLiteral
54      <Type> ::= <Base> <Pointers>
55      <Base> ::= <Sign> <Scalar>
56      <Base> ::= struct Id
57      <Base> ::= struct '{' <Struct Def> '}'
58      <Base> ::= union Id
59      <Base> ::= union '{' <Struct Def> '}'
60      <Base> ::= enum Id
61      <Sign> ::= signed
62      <Sign> ::= unsigned
63      <Sign> ::= 
64      <Scalar> ::= char
65      <Scalar> ::= int
66      <Scalar> ::= short
67      <Scalar> ::= long
68      <Scalar> ::= short int
69      <Scalar> ::= long int
70      <Scalar> ::= float
71      <Scalar> ::= double
72      <Scalar> ::= void
73      <Pointers> ::= '*' <Pointers>
74      <Pointers> ::= 
75      <Stm> ::= <Var Decl>
76      <Stm> ::= Id ':'
77      <Stm> ::= if '(' <Expr> ')' <Stm>
78      <Stm> ::= if '(' <Expr> ')' <Then Stm> else <Stm>
79      <Stm> ::= while '(' <Expr> ')' <Stm>
80      <Stm> ::= for '(' <Arg> ';' <Arg> ';' <Arg> ')' <Stm>
81      <Stm> ::= <Normal Stm>
82      <Then Stm> ::= if '(' <Expr> ')' <Then Stm> else <Then Stm>
83      <Then Stm> ::= while '(' <Expr> ')' <Then Stm>
84      <Then Stm> ::= for '(' <Arg> ';' <Arg> ';' <Arg> ')' <Then Stm>
85      <Then Stm> ::= <Normal Stm>
86      <Normal Stm> ::= do <Stm> while '(' <Expr> ')'
87      <Normal Stm> ::= switch '(' <Expr> ')' '{' <Case Stms> '}'
88      <Normal Stm> ::= <Block>
89      <Normal Stm> ::= <Expr> ';'
90      <Normal Stm> ::= goto Id ';'
91      <Normal Stm> ::= break ';'
92      <Normal Stm> ::= continue ';'
93      <Normal Stm> ::= return <Expr> ';'
94      <Normal Stm> ::= ';'
95      <Arg> ::= <Expr>
96      <Arg> ::= 
97      <Case Stms> ::= case <Value> ':' <Stm List> <Case Stms>
98      <Case Stms> ::= default ':' <Stm List>
99      <Case Stms> ::= 
100     <Block> ::= '{' <Stm List> '}'
101     <Stm List> ::= <Stm> <Stm List>
102     <Stm List> ::= 
103     <Expr> ::= <Expr> ',' <Op Assign>
104     <Expr> ::= <Op Assign>
105     <Op Assign> ::= <Op If> '=' <Op Assign>
106     <Op Assign> ::= <Op If> '+=' <Op Assign>
107     <Op Assign> ::= <Op If> '-=' <Op Assign>
108     <Op Assign> ::= <Op If> '*=' <Op Assign>
109     <Op Assign> ::= <Op If> '/=' <Op Assign>
110     <Op Assign> ::= <Op If> '^=' <Op Assign>
111     <Op Assign> ::= <Op If> '&=' <Op Assign>
112     <Op Assign> ::= <Op If> '|=' <Op Assign>
113     <Op Assign> ::= <Op If> '>>=' <Op Assign>
114     <Op Assign> ::= <Op If> '<<=' <Op Assign>
115     <Op Assign> ::= <Op If>
116     <Op If> ::= <Op Or> '?' <Op If> ':' <Op If>
117     <Op If> ::= <Op Or>
118     <Op Or> ::= <Op Or> '||' <Op And>
119     <Op Or> ::= <Op And>
120     <Op And> ::= <Op And> '&&' <Op BinOR>
121     <Op And> ::= <Op BinOR>
122     <Op BinOR> ::= <Op BinOR> '|' <Op BinXOR>
123     <Op BinOR> ::= <Op BinXOR>
124     <Op BinXOR> ::= <Op BinXOR> '^' <Op BinAND>
125     <Op BinXOR> ::= <Op BinAND>
126     <Op BinAND> ::= <Op BinAND> '&' <Op Equate>
127     <Op BinAND> ::= <Op Equate>
128     <Op Equate> ::= <Op Equate> '==' <Op Compare>
129     <Op Equate> ::= <Op Equate> '!=' <Op Compare>
130     <Op Equate> ::= <Op Compare>
131     <Op Compare> ::= <Op Compare> '<' <Op Shift>
132     <Op Compare> ::= <Op Compare> '>' <Op Shift>
133     <Op Compare> ::= <Op Compare> '<=' <Op Shift>
134     <Op Compare> ::= <Op Compare> '>=' <Op Shift>
135     <Op Compare> ::= <Op Shift>
136     <Op Shift> ::= <Op Shift> '<<' <Op Add>
137     <Op Shift> ::= <Op Shift> '>>' <Op Add>
138     <Op Shift> ::= <Op Add>
139     <Op Add> ::= <Op Add> '+' <Op Mult>
140     <Op Add> ::= <Op Add> '-' <Op Mult>
141     <Op Add> ::= <Op Mult>
142     <Op Mult> ::= <Op Mult> '*' <Op Unary>
143     <Op Mult> ::= <Op Mult> '/' <Op Unary>
144     <Op Mult> ::= <Op Mult> '%' <Op Unary>
145     <Op Mult> ::= <Op Unary>
146     <Op Unary> ::= '!' <Op Unary>
147     <Op Unary> ::= '~' <Op Unary>
148     <Op Unary> ::= '-' <Op Unary>
149     <Op Unary> ::= '*' <Op Unary>
150     <Op Unary> ::= '&' <Op Unary>
151     <Op Unary> ::= '++' <Op Unary>
152     <Op Unary> ::= '--' <Op Unary>
153     <Op Unary> ::= <Op Pointer> '++'
154     <Op Unary> ::= <Op Pointer> '--'
155     <Op Unary> ::= '(' <Type> ')' <Op Unary>
156     <Op Unary> ::= sizeof '(' <Type> ')'
157     <Op Unary> ::= sizeof '(' Id <Pointers> ')'
158     <Op Unary> ::= <Op Pointer>
159     <Op Pointer> ::= <Op Pointer> '.' <Value>
160     <Op Pointer> ::= <Op Pointer> '->' <Value>
161     <Op Pointer> ::= <Op Pointer> '[' <Expr> ']'
162     <Op Pointer> ::= <Value>
163     <Value> ::= OctLiteral
164     <Value> ::= HexLiteral
165     <Value> ::= DecLiteral
166     <Value> ::= StringLiteral
167     <Value> ::= CharLiteral
168     <Value> ::= FloatLiteral
169     <Value> ::= Id '(' <Expr> ')'
170     <Value> ::= Id '(' ')'
171     <Value> ::= Id
172     <Value> ::= '(' <Expr> ')'


========================================
LALR States
========================================

State 0
        auto s 1
        const s 2
        enum s 3
        extern s 4
        Id s 5
        register s 6
        signed s 7
        static s 8
        struct s 9
        typedef s 10
        union s 11
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Decl> g 15
        <Decls> g 16
        <Enum Decl> g 17
        <Func Decl> g 18
        <Func ID> g 19
        <Func Proto> g 20
        <Mod> g 21
        <Sign> g 22
        <Struct Decl> g 23
        <Type> g 24
        <Typedef Decl> g 25
        <Union Decl> g 26
        <Var Decl> g 27
        (EOF) r 1
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 1
        char r 44
        double r 44
        enum r 44
        float r 44
        Id r 44
        int r 44
        long r 44
        short r 44
        signed r 44
        struct r 44
        union r 44
        unsigned r 44
        void r 44


State 2
        char r 46
        double r 46
        enum r 46
        float r 46
        Id r 46
        int r 46
        long r 46
        short r 46
        signed r 46
        struct r 46
        union r 46
        unsigned r 46
        void r 46


State 3
        Id s 28


State 4
        char r 41
        double r 41
        enum r 41
        float r 41
        Id r 41
        int r 41
        long r 41
        short r 41
        signed r 41
        struct r 41
        union r 41
        unsigned r 41
        void r 41


State 5
        '(' r 24


State 6
        char r 43
        double r 43
        enum r 43
        float r 43
        Id r 43
        int r 43
        long r 43
        short r 43
        signed r 43
        struct r 43
        union r 43
        unsigned r 43
        void r 43


State 7
        char r 61
        double r 61
        float r 61
        int r 61
        long r 61
        short r 61
        void r 61


State 8
        char r 42
        double r 42
        enum r 42
        float r 42
        Id r 42
        int r 42
        long r 42
        short r 42
        signed r 42
        struct r 42
        union r 42
        unsigned r 42
        void r 42


State 9
        '{' s 29
        Id s 30


State 10
        enum s 31
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Sign> g 22
        <Type> g 34
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 11
        '{' s 35
        Id s 36


State 12
        char r 62
        double r 62
        float r 62
        int r 62
        long r 62
        short r 62
        void r 62


State 13
        char r 45
        double r 45
        enum r 45
        float r 45
        Id r 45
        int r 45
        long r 45
        short r 45
        signed r 45
        struct r 45
        union r 45
        unsigned r 45
        void r 45


State 14
        '*' s 37
        <Pointers> g 38
        ')' r 74
        ',' r 74
        Id r 74


State 15
        auto s 1
        const s 2
        enum s 3
        extern s 4
        Id s 5
        register s 6
        signed s 7
        static s 8
        struct s 9
        typedef s 10
        union s 11
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Decl> g 15
        <Decls> g 39
        <Enum Decl> g 17
        <Func Decl> g 18
        <Func ID> g 19
        <Func Proto> g 20
        <Mod> g 21
        <Sign> g 22
        <Struct Decl> g 23
        <Type> g 24
        <Typedef Decl> g 25
        <Union Decl> g 26
        <Var Decl> g 27
        (EOF) r 1
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 16
        (EOF) a


State 17
        (EOF) r 6
        auto r 6
        char r 6
        const r 6
        double r 6
        enum r 6
        extern r 6
        float r 6
        Id r 6
        int r 6
        long r 6
        register r 6
        short r 6
        signed r 6
        static r 6
        struct r 6
        typedef r 6
        union r 6
        unsigned r 6
        void r 6
        volatile r 6


State 18
        (EOF) r 2
        auto r 2
        char r 2
        const r 2
        double r 2
        enum r 2
        extern r 2
        float r 2
        Id r 2
        int r 2
        long r 2
        register r 2
        short r 2
        signed r 2
        static r 2
        struct r 2
        typedef r 2
        union r 2
        unsigned r 2
        void r 2
        volatile r 2


State 19
        '(' s 40


State 20
        (EOF) r 3
        auto r 3
        char r 3
        const r 3
        double r 3
        enum r 3
        extern r 3
        float r 3
        Id r 3
        int r 3
        long r 3
        register r 3
        short r 3
        signed r 3
        static r 3
        struct r 3
        typedef r 3
        union r 3
        unsigned r 3
        void r 3
        volatile r 3


State 21
        enum s 31
        Id s 41
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Sign> g 22
        <Type> g 42
        <Var> g 43
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 22
        char s 44
        double s 45
        float s 46
        int s 47
        long s 48
        short s 49
        void s 50
        <Scalar> g 51


State 23
        (EOF) r 4
        auto r 4
        char r 4
        const r 4
        double r 4
        enum r 4
        extern r 4
        float r 4
        Id r 4
        int r 4
        long r 4
        register r 4
        short r 4
        signed r 4
        static r 4
        struct r 4
        typedef r 4
        union r 4
        unsigned r 4
        void r 4
        volatile r 4


State 24
        Id s 52
        <Var> g 53


State 25
        (EOF) r 8
        auto r 8
        char r 8
        const r 8
        double r 8
        enum r 8
        extern r 8
        float r 8
        Id r 8
        int r 8
        long r 8
        register r 8
        short r 8
        signed r 8
        static r 8
        struct r 8
        typedef r 8
        union r 8
        unsigned r 8
        void r 8
        volatile r 8


State 26
        (EOF) r 5
        auto r 5
        char r 5
        const r 5
        double r 5
        enum r 5
        extern r 5
        float r 5
        Id r 5
        int r 5
        long r 5
        register r 5
        short r 5
        signed r 5
        static r 5
        struct r 5
        typedef r 5
        union r 5
        unsigned r 5
        void r 5
        volatile r 5


State 27
        (EOF) r 7
        auto r 7
        char r 7
        const r 7
        double r 7
        enum r 7
        extern r 7
        float r 7
        Id r 7
        int r 7
        long r 7
        register r 7
        short r 7
        signed r 7
        static r 7
        struct r 7
        typedef r 7
        union r 7
        unsigned r 7
        void r 7
        volatile r 7


State 28
        '{' s 54
        '*' r 60
        Id r 60


State 29
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 55
        <Type> g 56
        <Var Decl> g 57
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 30
        '{' s 58
        '*' r 56
        Id r 56


State 31
        Id s 59


State 32
        '{' s 29
        Id s 60


State 33
        '{' s 35
        Id s 61


State 34
        Id s 62


State 35
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 63
        <Type> g 56
        <Var Decl> g 57
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 36
        '{' s 64
        '*' r 58
        Id r 58


State 37
        '*' s 37
        <Pointers> g 65
        ')' r 74
        ',' r 74
        Id r 74


State 38
        ')' r 54
        ',' r 54
        Id r 54


State 39
        (EOF) r 0


State 40
        ')' s 66
        const s 67
        enum s 31
        Id s 68
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Id List> g 69
        <Param> g 70
        <Params> g 71
        <Sign> g 22
        <Type> g 72
        <Types> g 73
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 41
        '[' s 74
        <Array> g 75
        ',' r 37
        ';' r 37
        '=' r 37


State 42
        Id s 41
        <Var> g 76


State 43
        ',' s 77
        <Var List> g 78
        ';' r 39


State 44
        ')' r 64
        '*' r 64
        ',' r 64
        Id r 64


State 45
        ')' r 71
        '*' r 71
        ',' r 71
        Id r 71


State 46
        ')' r 70
        '*' r 70
        ',' r 70
        Id r 70


State 47
        ')' r 65
        '*' r 65
        ',' r 65
        Id r 65


State 48
        int s 79
        ')' r 67
        '*' r 67
        ',' r 67
        Id r 67


State 49
        int s 80
        ')' r 66
        '*' r 66
        ',' r 66
        Id r 66


State 50
        ')' r 72
        '*' r 72
        ',' r 72
        Id r 72


State 51
        ')' r 55
        '*' r 55
        ',' r 55
        Id r 55


State 52
        '[' s 74
        <Array> g 75
        '(' r 23
        ',' r 37
        ';' r 37
        '=' r 37


State 53
        ',' s 77
        <Var List> g 81
        ';' r 39


State 54
        Id s 82
        <Enum Def> g 83
        <Enum Val> g 84


State 55
        '}' s 85


State 56
        Id s 41
        <Var> g 53


State 57
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 86
        <Type> g 56
        <Var Decl> g 57
        '{' r 29
        '}' r 29
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 58
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 87
        <Type> g 56
        <Var Decl> g 57
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 59
        ')' r 60
        '*' r 60
        ',' r 60
        Id r 60


State 60
        ')' r 56
        '*' r 56
        ',' r 56
        Id r 56


State 61
        ')' r 58
        '*' r 58
        ',' r 58
        Id r 58


State 62
        ';' s 88


State 63
        '}' s 89


State 64
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 90
        <Type> g 56
        <Var Decl> g 57
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 65
        ')' r 73
        ',' r 73
        Id r 73


State 66
        ';' s 91
        '{' s 92
        <Block> g 93


State 67
        enum s 31
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Sign> g 22
        <Type> g 94
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 68
        ',' s 95
        ')' r 22


State 69
        ')' s 96


State 70
        ',' s 97
        ')' r 16


State 71
        ')' s 98


State 72
        ',' s 99
        Id s 100
        ')' r 20


State 73
        ')' s 101


State 74
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ']' s 108
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 119
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 75
        '=' s 135
        ',' r 33
        ';' r 33


State 76
        ',' s 77
        <Var List> g 136
        ';' r 39


State 77
        '*' s 37
        <Pointers> g 137
        <Var Item> g 138
        Id r 74


State 78
        ';' s 139


State 79
        ')' r 69
        '*' r 69
        ',' r 69
        Id r 69


State 80
        ')' r 68
        '*' r 68
        ',' r 68
        Id r 68


State 81
        ';' s 140


State 82
        '=' s 141
        ',' r 50
        '}' r 50


State 83
        '}' s 142


State 84
        ',' s 143
        '}' r 49


State 85
        ')' r 57
        '*' r 57
        ',' r 57
        Id r 57


State 86
        '{' r 28
        '}' r 28


State 87
        '}' s 144


State 88
        (EOF) r 25
        auto r 25
        char r 25
        const r 25
        double r 25
        enum r 25
        extern r 25
        float r 25
        Id r 25
        int r 25
        long r 25
        register r 25
        short r 25
        signed r 25
        static r 25
        struct r 25
        typedef r 25
        union r 25
        unsigned r 25
        void r 25
        volatile r 25


State 89
        ')' r 59
        '*' r 59
        ',' r 59
        Id r 59


State 90
        '}' s 145


State 91
        (EOF) r 11
        auto r 11
        char r 11
        const r 11
        double r 11
        enum r 11
        extern r 11
        float r 11
        Id r 11
        int r 11
        long r 11
        register r 11
        short r 11
        signed r 11
        static r 11
        struct r 11
        typedef r 11
        union r 11
        unsigned r 11
        void r 11
        volatile r 11


State 92
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 160
        <Stm List> g 161
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63
        '}' r 102


State 93
        (EOF) r 14
        auto r 14
        char r 14
        const r 14
        double r 14
        enum r 14
        extern r 14
        float r 14
        Id r 14
        int r 14
        long r 14
        register r 14
        short r 14
        signed r 14
        static r 14
        struct r 14
        typedef r 14
        union r 14
        unsigned r 14
        void r 14
        volatile r 14


State 94
        Id s 163


State 95
        Id s 68
        <Id List> g 164


State 96
        auto s 1
        const s 2
        enum s 31
        extern s 4
        register s 6
        signed s 7
        static s 8
        struct s 32
        union s 33
        unsigned s 12
        volatile s 13
        <Base> g 14
        <Mod> g 21
        <Sign> g 22
        <Struct Def> g 165
        <Type> g 56
        <Var Decl> g 57
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 97
        const s 67
        enum s 31
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Param> g 70
        <Params> g 166
        <Sign> g 22
        <Type> g 167
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 98
        ';' s 168
        '{' s 92
        <Block> g 169


State 99
        enum s 31
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Sign> g 22
        <Type> g 170
        <Types> g 171
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 100
        ')' r 18
        ',' r 18


State 101
        ';' s 172


State 102
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 173
        <Value> g 134


State 103
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 174
        <Value> g 134


State 104
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 175
        <Value> g 134


State 105
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 176
        <Value> g 134


State 106
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        enum s 31
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        signed s 7
        sizeof s 117
        StringLiteral s 118
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Expr> g 177
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Type> g 178
        <Value> g 134
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 107
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 179
        <Value> g 134


State 108
        ',' r 36
        ';' r 36
        '=' r 36


State 109
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 180
        <Value> g 134


State 110
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 181
        <Value> g 134


State 111
        '-' r 167
        '--' r 167
        '!=' r 167
        '%' r 167
        '&' r 167
        '&&' r 167
        '&=' r 167
        ')' r 167
        '*' r 167
        '*=' r 167
        ',' r 167
        '.' r 167
        '/' r 167
        '/=' r 167
        ':' r 167
        ';' r 167
        '?' r 167
        '[' r 167
        ']' r 167
        '^' r 167
        '^=' r 167
        '|' r 167
        '||' r 167
        '|=' r 167
        '+' r 167
        '++' r 167
        '+=' r 167
        '<' r 167
        '<<' r 167
        '<<=' r 167
        '<=' r 167
        '=' r 167
        '-=' r 167
        '==' r 167
        '>' r 167
        '->' r 167
        '>=' r 167
        '>>' r 167
        '>>=' r 167


State 112
        '-' r 165
        '--' r 165
        '!=' r 165
        '%' r 165
        '&' r 165
        '&&' r 165
        '&=' r 165
        ')' r 165
        '*' r 165
        '*=' r 165
        ',' r 165
        '.' r 165
        '/' r 165
        '/=' r 165
        ':' r 165
        ';' r 165
        '?' r 165
        '[' r 165
        ']' r 165
        '^' r 165
        '^=' r 165
        '|' r 165
        '||' r 165
        '|=' r 165
        '+' r 165
        '++' r 165
        '+=' r 165
        '<' r 165
        '<<' r 165
        '<<=' r 165
        '<=' r 165
        '=' r 165
        '-=' r 165
        '==' r 165
        '>' r 165
        '->' r 165
        '>=' r 165
        '>>' r 165
        '>>=' r 165


State 113
        '-' r 168
        '--' r 168
        '!=' r 168
        '%' r 168
        '&' r 168
        '&&' r 168
        '&=' r 168
        ')' r 168
        '*' r 168
        '*=' r 168
        ',' r 168
        '.' r 168
        '/' r 168
        '/=' r 168
        ':' r 168
        ';' r 168
        '?' r 168
        '[' r 168
        ']' r 168
        '^' r 168
        '^=' r 168
        '|' r 168
        '||' r 168
        '|=' r 168
        '+' r 168
        '++' r 168
        '+=' r 168
        '<' r 168
        '<<' r 168
        '<<=' r 168
        '<=' r 168
        '=' r 168
        '-=' r 168
        '==' r 168
        '>' r 168
        '->' r 168
        '>=' r 168
        '>>' r 168
        '>>=' r 168


State 114
        '-' r 164
        '--' r 164
        '!=' r 164
        '%' r 164
        '&' r 164
        '&&' r 164
        '&=' r 164
        ')' r 164
        '*' r 164
        '*=' r 164
        ',' r 164
        '.' r 164
        '/' r 164
        '/=' r 164
        ':' r 164
        ';' r 164
        '?' r 164
        '[' r 164
        ']' r 164
        '^' r 164
        '^=' r 164
        '|' r 164
        '||' r 164
        '|=' r 164
        '+' r 164
        '++' r 164
        '+=' r 164
        '<' r 164
        '<<' r 164
        '<<=' r 164
        '<=' r 164
        '=' r 164
        '-=' r 164
        '==' r 164
        '>' r 164
        '->' r 164
        '>=' r 164
        '>>' r 164
        '>>=' r 164


State 115
        '(' s 182
        '-' r 171
        '--' r 171
        '!=' r 171
        '%' r 171
        '&' r 171
        '&&' r 171
        '&=' r 171
        ')' r 171
        '*' r 171
        '*=' r 171
        ',' r 171
        '.' r 171
        '/' r 171
        '/=' r 171
        ':' r 171
        ';' r 171
        '?' r 171
        '[' r 171
        ']' r 171
        '^' r 171
        '^=' r 171
        '|' r 171
        '||' r 171
        '|=' r 171
        '+' r 171
        '++' r 171
        '+=' r 171
        '<' r 171
        '<<' r 171
        '<<=' r 171
        '<=' r 171
        '=' r 171
        '-=' r 171
        '==' r 171
        '>' r 171
        '->' r 171
        '>=' r 171
        '>>' r 171
        '>>=' r 171


State 116
        '-' r 163
        '--' r 163
        '!=' r 163
        '%' r 163
        '&' r 163
        '&&' r 163
        '&=' r 163
        ')' r 163
        '*' r 163
        '*=' r 163
        ',' r 163
        '.' r 163
        '/' r 163
        '/=' r 163
        ':' r 163
        ';' r 163
        '?' r 163
        '[' r 163
        ']' r 163
        '^' r 163
        '^=' r 163
        '|' r 163
        '||' r 163
        '|=' r 163
        '+' r 163
        '++' r 163
        '+=' r 163
        '<' r 163
        '<<' r 163
        '<<=' r 163
        '<=' r 163
        '=' r 163
        '-=' r 163
        '==' r 163
        '>' r 163
        '->' r 163
        '>=' r 163
        '>>' r 163
        '>>=' r 163


State 117
        '(' s 183


State 118
        '-' r 166
        '--' r 166
        '!=' r 166
        '%' r 166
        '&' r 166
        '&&' r 166
        '&=' r 166
        ')' r 166
        '*' r 166
        '*=' r 166
        ',' r 166
        '.' r 166
        '/' r 166
        '/=' r 166
        ':' r 166
        ';' r 166
        '?' r 166
        '[' r 166
        ']' r 166
        '^' r 166
        '^=' r 166
        '|' r 166
        '||' r 166
        '|=' r 166
        '+' r 166
        '++' r 166
        '+=' r 166
        '<' r 166
        '<<' r 166
        '<<=' r 166
        '<=' r 166
        '=' r 166
        '-=' r 166
        '==' r 166
        '>' r 166
        '->' r 166
        '>=' r 166
        '>>' r 166
        '>>=' r 166


State 119
        ',' s 184
        ']' s 185


State 120
        '-' s 186
        '+' s 187
        '!=' r 138
        '&' r 138
        '&&' r 138
        '&=' r 138
        ')' r 138
        '*=' r 138
        ',' r 138
        '/=' r 138
        ':' r 138
        ';' r 138
        '?' r 138
        ']' r 138
        '^' r 138
        '^=' r 138
        '|' r 138
        '||' r 138
        '|=' r 138
        '+=' r 138
        '<' r 138
        '<<' r 138
        '<<=' r 138
        '<=' r 138
        '=' r 138
        '-=' r 138
        '==' r 138
        '>' r 138
        '>=' r 138
        '>>' r 138
        '>>=' r 138


State 121
        '&&' s 188
        '&=' r 119
        ')' r 119
        '*=' r 119
        ',' r 119
        '/=' r 119
        ':' r 119
        ';' r 119
        '?' r 119
        ']' r 119
        '^=' r 119
        '||' r 119
        '|=' r 119
        '+=' r 119
        '<<=' r 119
        '=' r 119
        '-=' r 119
        '>>=' r 119


State 122
        ')' r 104
        ',' r 104
        ';' r 104
        ']' r 104


State 123
        '&' s 189
        '&&' r 125
        '&=' r 125
        ')' r 125
        '*=' r 125
        ',' r 125
        '/=' r 125
        ':' r 125
        ';' r 125
        '?' r 125
        ']' r 125
        '^' r 125
        '^=' r 125
        '|' r 125
        '||' r 125
        '|=' r 125
        '+=' r 125
        '<<=' r 125
        '=' r 125
        '-=' r 125
        '>>=' r 125


State 124
        '|' s 190
        '&&' r 121
        '&=' r 121
        ')' r 121
        '*=' r 121
        ',' r 121
        '/=' r 121
        ':' r 121
        ';' r 121
        '?' r 121
        ']' r 121
        '^=' r 121
        '||' r 121
        '|=' r 121
        '+=' r 121
        '<<=' r 121
        '=' r 121
        '-=' r 121
        '>>=' r 121


State 125
        '^' s 191
        '&&' r 123
        '&=' r 123
        ')' r 123
        '*=' r 123
        ',' r 123
        '/=' r 123
        ':' r 123
        ';' r 123
        '?' r 123
        ']' r 123
        '^=' r 123
        '|' r 123
        '||' r 123
        '|=' r 123
        '+=' r 123
        '<<=' r 123
        '=' r 123
        '-=' r 123
        '>>=' r 123


State 126
        '<' s 192
        '<=' s 193
        '>' s 194
        '>=' s 195
        '!=' r 130
        '&' r 130
        '&&' r 130
        '&=' r 130
        ')' r 130
        '*=' r 130
        ',' r 130
        '/=' r 130
        ':' r 130
        ';' r 130
        '?' r 130
        ']' r 130
        '^' r 130
        '^=' r 130
        '|' r 130
        '||' r 130
        '|=' r 130
        '+=' r 130
        '<<=' r 130
        '=' r 130
        '-=' r 130
        '==' r 130
        '>>=' r 130


State 127
        '!=' s 196
        '==' s 197
        '&' r 127
        '&&' r 127
        '&=' r 127
        ')' r 127
        '*=' r 127
        ',' r 127
        '/=' r 127
        ':' r 127
        ';' r 127
        '?' r 127
        ']' r 127
        '^' r 127
        '^=' r 127
        '|' r 127
        '||' r 127
        '|=' r 127
        '+=' r 127
        '<<=' r 127
        '=' r 127
        '-=' r 127
        '>>=' r 127


State 128
        '&=' s 198
        '*=' s 199
        '/=' s 200
        '^=' s 201
        '|=' s 202
        '+=' s 203
        '<<=' s 204
        '=' s 205
        '-=' s 206
        '>>=' s 207
        ')' r 115
        ',' r 115
        ';' r 115
        ']' r 115


State 129
        '%' s 208
        '*' s 209
        '/' s 210
        '-' r 141
        '!=' r 141
        '&' r 141
        '&&' r 141
        '&=' r 141
        ')' r 141
        '*=' r 141
        ',' r 141
        '/=' r 141
        ':' r 141
        ';' r 141
        '?' r 141
        ']' r 141
        '^' r 141
        '^=' r 141
        '|' r 141
        '||' r 141
        '|=' r 141
        '+' r 141
        '+=' r 141
        '<' r 141
        '<<' r 141
        '<<=' r 141
        '<=' r 141
        '=' r 141
        '-=' r 141
        '==' r 141
        '>' r 141
        '>=' r 141
        '>>' r 141
        '>>=' r 141


State 130
        '?' s 211
        '||' s 212
        '&=' r 117
        ')' r 117
        '*=' r 117
        ',' r 117
        '/=' r 117
        ':' r 117
        ';' r 117
        ']' r 117
        '^=' r 117
        '|=' r 117
        '+=' r 117
        '<<=' r 117
        '=' r 117
        '-=' r 117
        '>>=' r 117


State 131
        '--' s 213
        '.' s 214
        '[' s 215
        '++' s 216
        '->' s 217
        '-' r 158
        '!=' r 158
        '%' r 158
        '&' r 158
        '&&' r 158
        '&=' r 158
        ')' r 158
        '*' r 158
        '*=' r 158
        ',' r 158
        '/' r 158
        '/=' r 158
        ':' r 158
        ';' r 158
        '?' r 158
        ']' r 158
        '^' r 158
        '^=' r 158
        '|' r 158
        '||' r 158
        '|=' r 158
        '+' r 158
        '+=' r 158
        '<' r 158
        '<<' r 158
        '<<=' r 158
        '<=' r 158
        '=' r 158
        '-=' r 158
        '==' r 158
        '>' r 158
        '>=' r 158
        '>>' r 158
        '>>=' r 158


State 132
        '<<' s 218
        '>>' s 219
        '!=' r 135
        '&' r 135
        '&&' r 135
        '&=' r 135
        ')' r 135
        '*=' r 135
        ',' r 135
        '/=' r 135
        ':' r 135
        ';' r 135
        '?' r 135
        ']' r 135
        '^' r 135
        '^=' r 135
        '|' r 135
        '||' r 135
        '|=' r 135
        '+=' r 135
        '<' r 135
        '<<=' r 135
        '<=' r 135
        '=' r 135
        '-=' r 135
        '==' r 135
        '>' r 135
        '>=' r 135
        '>>=' r 135


State 133
        '-' r 145
        '!=' r 145
        '%' r 145
        '&' r 145
        '&&' r 145
        '&=' r 145
        ')' r 145
        '*' r 145
        '*=' r 145
        ',' r 145
        '/' r 145
        '/=' r 145
        ':' r 145
        ';' r 145
        '?' r 145
        ']' r 145
        '^' r 145
        '^=' r 145
        '|' r 145
        '||' r 145
        '|=' r 145
        '+' r 145
        '+=' r 145
        '<' r 145
        '<<' r 145
        '<<=' r 145
        '<=' r 145
        '=' r 145
        '-=' r 145
        '==' r 145
        '>' r 145
        '>=' r 145
        '>>' r 145
        '>>=' r 145


State 134
        '-' r 162
        '--' r 162
        '!=' r 162
        '%' r 162
        '&' r 162
        '&&' r 162
        '&=' r 162
        ')' r 162
        '*' r 162
        '*=' r 162
        ',' r 162
        '.' r 162
        '/' r 162
        '/=' r 162
        ':' r 162
        ';' r 162
        '?' r 162
        '[' r 162
        ']' r 162
        '^' r 162
        '^=' r 162
        '|' r 162
        '||' r 162
        '|=' r 162
        '+' r 162
        '++' r 162
        '+=' r 162
        '<' r 162
        '<<' r 162
        '<<=' r 162
        '<=' r 162
        '=' r 162
        '-=' r 162
        '==' r 162
        '>' r 162
        '->' r 162
        '>=' r 162
        '>>' r 162
        '>>=' r 162


State 135
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 220
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 136
        ';' s 221


State 137
        Id s 41
        <Var> g 222


State 138
        ',' s 77
        <Var List> g 223
        ';' r 39


State 139
        (EOF) r 32
        '-' r 32
        '--' r 32
        '!' r 32
        '&' r 32
        '(' r 32
        '*' r 32
        ';' r 32
        '{' r 32
        '}' r 32
        '~' r 32
        '++' r 32
        auto r 32
        break r 32
        case r 32
        char r 32
        CharLiteral r 32
        const r 32
        continue r 32
        DecLiteral r 32
        default r 32
        do r 32
        double r 32
        enum r 32
        extern r 32
        float r 32
        FloatLiteral r 32
        for r 32
        goto r 32
        HexLiteral r 32
        Id r 32
        if r 32
        int r 32
        long r 32
        OctLiteral r 32
        register r 32
        return r 32
        short r 32
        signed r 32
        sizeof r 32
        static r 32
        StringLiteral r 32
        struct r 32
        switch r 32
        typedef r 32
        union r 32
        unsigned r 32
        void r 32
        volatile r 32
        while r 32


State 140
        (EOF) r 31
        '-' r 31
        '--' r 31
        '!' r 31
        '&' r 31
        '(' r 31
        '*' r 31
        ';' r 31
        '{' r 31
        '}' r 31
        '~' r 31
        '++' r 31
        auto r 31
        break r 31
        case r 31
        char r 31
        CharLiteral r 31
        const r 31
        continue r 31
        DecLiteral r 31
        default r 31
        do r 31
        double r 31
        enum r 31
        extern r 31
        float r 31
        FloatLiteral r 31
        for r 31
        goto r 31
        HexLiteral r 31
        Id r 31
        if r 31
        int r 31
        long r 31
        OctLiteral r 31
        register r 31
        return r 31
        short r 31
        signed r 31
        sizeof r 31
        static r 31
        StringLiteral r 31
        struct r 31
        switch r 31
        typedef r 31
        union r 31
        unsigned r 31
        void r 31
        volatile r 31
        while r 31


State 141
        DecLiteral s 224
        HexLiteral s 225
        OctLiteral s 226


State 142
        ';' s 227


State 143
        Id s 82
        <Enum Def> g 228
        <Enum Val> g 84


State 144
        ';' s 229


State 145
        ';' s 230


State 146
        '-' r 94
        '--' r 94
        '!' r 94
        '&' r 94
        '(' r 94
        '*' r 94
        ';' r 94
        '{' r 94
        '}' r 94
        '~' r 94
        '++' r 94
        auto r 94
        break r 94
        case r 94
        char r 94
        CharLiteral r 94
        const r 94
        continue r 94
        DecLiteral r 94
        default r 94
        do r 94
        double r 94
        else r 94
        enum r 94
        extern r 94
        float r 94
        FloatLiteral r 94
        for r 94
        goto r 94
        HexLiteral r 94
        Id r 94
        if r 94
        int r 94
        long r 94
        OctLiteral r 94
        register r 94
        return r 94
        short r 94
        signed r 94
        sizeof r 94
        static r 94
        StringLiteral r 94
        struct r 94
        switch r 94
        union r 94
        unsigned r 94
        void r 94
        volatile r 94
        while r 94


State 147
        ';' s 231


State 148
        ';' s 232


State 149
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 233
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 150
        '(' s 234


State 151
        Id s 235


State 152
        '(' s 182
        ':' s 236
        '-' r 171
        '--' r 171
        '!=' r 171
        '%' r 171
        '&' r 171
        '&&' r 171
        '&=' r 171
        '*' r 171
        '*=' r 171
        ',' r 171
        '.' r 171
        '/' r 171
        '/=' r 171
        ';' r 171
        '?' r 171
        '[' r 171
        '^' r 171
        '^=' r 171
        '|' r 171
        '||' r 171
        '|=' r 171
        '+' r 171
        '++' r 171
        '+=' r 171
        '<' r 171
        '<<' r 171
        '<<=' r 171
        '<=' r 171
        '=' r 171
        '-=' r 171
        '==' r 171
        '>' r 171
        '->' r 171
        '>=' r 171
        '>>' r 171
        '>>=' r 171


State 153
        '(' s 237


State 154
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 238
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 155
        '(' s 239


State 156
        '(' s 240


State 157
        '-' r 88
        '--' r 88
        '!' r 88
        '&' r 88
        '(' r 88
        '*' r 88
        ';' r 88
        '{' r 88
        '}' r 88
        '~' r 88
        '++' r 88
        auto r 88
        break r 88
        case r 88
        char r 88
        CharLiteral r 88
        const r 88
        continue r 88
        DecLiteral r 88
        default r 88
        do r 88
        double r 88
        else r 88
        enum r 88
        extern r 88
        float r 88
        FloatLiteral r 88
        for r 88
        goto r 88
        HexLiteral r 88
        Id r 88
        if r 88
        int r 88
        long r 88
        OctLiteral r 88
        register r 88
        return r 88
        short r 88
        signed r 88
        sizeof r 88
        static r 88
        StringLiteral r 88
        struct r 88
        switch r 88
        union r 88
        unsigned r 88
        void r 88
        volatile r 88
        while r 88


State 158
        ',' s 184
        ';' s 241


State 159
        '-' r 81
        '--' r 81
        '!' r 81
        '&' r 81
        '(' r 81
        '*' r 81
        ';' r 81
        '{' r 81
        '}' r 81
        '~' r 81
        '++' r 81
        auto r 81
        break r 81
        case r 81
        char r 81
        CharLiteral r 81
        const r 81
        continue r 81
        DecLiteral r 81
        default r 81
        do r 81
        double r 81
        enum r 81
        extern r 81
        float r 81
        FloatLiteral r 81
        for r 81
        goto r 81
        HexLiteral r 81
        Id r 81
        if r 81
        int r 81
        long r 81
        OctLiteral r 81
        register r 81
        return r 81
        short r 81
        signed r 81
        sizeof r 81
        static r 81
        StringLiteral r 81
        struct r 81
        switch r 81
        union r 81
        unsigned r 81
        void r 81
        volatile r 81
        while r 81


State 160
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 160
        <Stm List> g 242
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63
        '}' r 102
        case r 102
        default r 102


State 161
        '}' s 243


State 162
        '-' r 75
        '--' r 75
        '!' r 75
        '&' r 75
        '(' r 75
        '*' r 75
        ';' r 75
        '{' r 75
        '}' r 75
        '~' r 75
        '++' r 75
        auto r 75
        break r 75
        case r 75
        char r 75
        CharLiteral r 75
        const r 75
        continue r 75
        DecLiteral r 75
        default r 75
        do r 75
        double r 75
        enum r 75
        extern r 75
        float r 75
        FloatLiteral r 75
        for r 75
        goto r 75
        HexLiteral r 75
        Id r 75
        if r 75
        int r 75
        long r 75
        OctLiteral r 75
        register r 75
        return r 75
        short r 75
        signed r 75
        sizeof r 75
        static r 75
        StringLiteral r 75
        struct r 75
        switch r 75
        union r 75
        unsigned r 75
        void r 75
        volatile r 75
        while r 75


State 163
        ')' r 17
        ',' r 17


State 164
        ')' r 21


State 165
        '{' s 92
        <Block> g 244


State 166
        ')' r 15


State 167
        Id s 100


State 168
        (EOF) r 10
        auto r 10
        char r 10
        const r 10
        double r 10
        enum r 10
        extern r 10
        float r 10
        Id r 10
        int r 10
        long r 10
        register r 10
        short r 10
        signed r 10
        static r 10
        struct r 10
        typedef r 10
        union r 10
        unsigned r 10
        void r 10
        volatile r 10


State 169
        (EOF) r 12
        auto r 12
        char r 12
        const r 12
        double r 12
        enum r 12
        extern r 12
        float r 12
        Id r 12
        int r 12
        long r 12
        register r 12
        short r 12
        signed r 12
        static r 12
        struct r 12
        typedef r 12
        union r 12
        unsigned r 12
        void r 12
        volatile r 12


State 170
        ',' s 99
        ')' r 20


State 171
        ')' r 19


State 172
        (EOF) r 9
        auto r 9
        char r 9
        const r 9
        double r 9
        enum r 9
        extern r 9
        float r 9
        Id r 9
        int r 9
        long r 9
        register r 9
        short r 9
        signed r 9
        static r 9
        struct r 9
        typedef r 9
        union r 9
        unsigned r 9
        void r 9
        volatile r 9


State 173
        '-' r 148
        '!=' r 148
        '%' r 148
        '&' r 148
        '&&' r 148
        '&=' r 148
        ')' r 148
        '*' r 148
        '*=' r 148
        ',' r 148
        '/' r 148
        '/=' r 148
        ':' r 148
        ';' r 148
        '?' r 148
        ']' r 148
        '^' r 148
        '^=' r 148
        '|' r 148
        '||' r 148
        '|=' r 148
        '+' r 148
        '+=' r 148
        '<' r 148
        '<<' r 148
        '<<=' r 148
        '<=' r 148
        '=' r 148
        '-=' r 148
        '==' r 148
        '>' r 148
        '>=' r 148
        '>>' r 148
        '>>=' r 148


State 174
        '-' r 152
        '!=' r 152
        '%' r 152
        '&' r 152
        '&&' r 152
        '&=' r 152
        ')' r 152
        '*' r 152
        '*=' r 152
        ',' r 152
        '/' r 152
        '/=' r 152
        ':' r 152
        ';' r 152
        '?' r 152
        ']' r 152
        '^' r 152
        '^=' r 152
        '|' r 152
        '||' r 152
        '|=' r 152
        '+' r 152
        '+=' r 152
        '<' r 152
        '<<' r 152
        '<<=' r 152
        '<=' r 152
        '=' r 152
        '-=' r 152
        '==' r 152
        '>' r 152
        '>=' r 152
        '>>' r 152
        '>>=' r 152


State 175
        '-' r 146
        '!=' r 146
        '%' r 146
        '&' r 146
        '&&' r 146
        '&=' r 146
        ')' r 146
        '*' r 146
        '*=' r 146
        ',' r 146
        '/' r 146
        '/=' r 146
        ':' r 146
        ';' r 146
        '?' r 146
        ']' r 146
        '^' r 146
        '^=' r 146
        '|' r 146
        '||' r 146
        '|=' r 146
        '+' r 146
        '+=' r 146
        '<' r 146
        '<<' r 146
        '<<=' r 146
        '<=' r 146
        '=' r 146
        '-=' r 146
        '==' r 146
        '>' r 146
        '>=' r 146
        '>>' r 146
        '>>=' r 146


State 176
        '-' r 150
        '!=' r 150
        '%' r 150
        '&' r 150
        '&&' r 150
        '&=' r 150
        ')' r 150
        '*' r 150
        '*=' r 150
        ',' r 150
        '/' r 150
        '/=' r 150
        ':' r 150
        ';' r 150
        '?' r 150
        ']' r 150
        '^' r 150
        '^=' r 150
        '|' r 150
        '||' r 150
        '|=' r 150
        '+' r 150
        '+=' r 150
        '<' r 150
        '<<' r 150
        '<<=' r 150
        '<=' r 150
        '=' r 150
        '-=' r 150
        '==' r 150
        '>' r 150
        '>=' r 150
        '>>' r 150
        '>>=' r 150


State 177
        ')' s 245
        ',' s 184


State 178
        ')' s 246


State 179
        '-' r 149
        '!=' r 149
        '%' r 149
        '&' r 149
        '&&' r 149
        '&=' r 149
        ')' r 149
        '*' r 149
        '*=' r 149
        ',' r 149
        '/' r 149
        '/=' r 149
        ':' r 149
        ';' r 149
        '?' r 149
        ']' r 149
        '^' r 149
        '^=' r 149
        '|' r 149
        '||' r 149
        '|=' r 149
        '+' r 149
        '+=' r 149
        '<' r 149
        '<<' r 149
        '<<=' r 149
        '<=' r 149
        '=' r 149
        '-=' r 149
        '==' r 149
        '>' r 149
        '>=' r 149
        '>>' r 149
        '>>=' r 149


State 180
        '-' r 147
        '!=' r 147
        '%' r 147
        '&' r 147
        '&&' r 147
        '&=' r 147
        ')' r 147
        '*' r 147
        '*=' r 147
        ',' r 147
        '/' r 147
        '/=' r 147
        ':' r 147
        ';' r 147
        '?' r 147
        ']' r 147
        '^' r 147
        '^=' r 147
        '|' r 147
        '||' r 147
        '|=' r 147
        '+' r 147
        '+=' r 147
        '<' r 147
        '<<' r 147
        '<<=' r 147
        '<=' r 147
        '=' r 147
        '-=' r 147
        '==' r 147
        '>' r 147
        '>=' r 147
        '>>' r 147
        '>>=' r 147


State 181
        '-' r 151
        '!=' r 151
        '%' r 151
        '&' r 151
        '&&' r 151
        '&=' r 151
        ')' r 151
        '*' r 151
        '*=' r 151
        ',' r 151
        '/' r 151
        '/=' r 151
        ':' r 151
        ';' r 151
        '?' r 151
        ']' r 151
        '^' r 151
        '^=' r 151
        '|' r 151
        '||' r 151
        '|=' r 151
        '+' r 151
        '+=' r 151
        '<' r 151
        '<<' r 151
        '<<=' r 151
        '<=' r 151
        '=' r 151
        '-=' r 151
        '==' r 151
        '>' r 151
        '>=' r 151
        '>>' r 151
        '>>=' r 151


State 182
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        ')' s 247
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 248
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 183
        enum s 31
        Id s 249
        signed s 7
        struct s 32
        union s 33
        unsigned s 12
        <Base> g 14
        <Sign> g 22
        <Type> g 250
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 184
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 251
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 185
        ',' r 35
        ';' r 35
        '=' r 35


State 186
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Mult> g 252
        <Op Pointer> g 131
        <Op Unary> g 133
        <Value> g 134


State 187
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Mult> g 253
        <Op Pointer> g 131
        <Op Unary> g 133
        <Value> g 134


State 188
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op BinAND> g 123
        <Op BinOR> g 254
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 189
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Compare> g 126
        <Op Equate> g 255
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 190
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op BinAND> g 123
        <Op BinXOR> g 256
        <Op Compare> g 126
        <Op Equate> g 127
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 191
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op BinAND> g 257
        <Op Compare> g 126
        <Op Equate> g 127
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 192
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 258
        <Op Unary> g 133
        <Value> g 134


State 193
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 259
        <Op Unary> g 133
        <Value> g 134


State 194
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 260
        <Op Unary> g 133
        <Value> g 134


State 195
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 261
        <Op Unary> g 133
        <Value> g 134


State 196
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Compare> g 262
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 197
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op Compare> g 263
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 198
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 264
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 199
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 265
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 200
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 266
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 201
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 267
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 202
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 268
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 203
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 269
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 204
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 270
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 205
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 271
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 206
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 272
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 207
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 273
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 208
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 274
        <Value> g 134


State 209
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 275
        <Value> g 134


State 210
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 276
        <Value> g 134


State 211
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 277
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 212
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 278
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 213
        '-' r 154
        '!=' r 154
        '%' r 154
        '&' r 154
        '&&' r 154
        '&=' r 154
        ')' r 154
        '*' r 154
        '*=' r 154
        ',' r 154
        '/' r 154
        '/=' r 154
        ':' r 154
        ';' r 154
        '?' r 154
        ']' r 154
        '^' r 154
        '^=' r 154
        '|' r 154
        '||' r 154
        '|=' r 154
        '+' r 154
        '+=' r 154
        '<' r 154
        '<<' r 154
        '<<=' r 154
        '<=' r 154
        '=' r 154
        '-=' r 154
        '==' r 154
        '>' r 154
        '>=' r 154
        '>>' r 154
        '>>=' r 154


State 214
        '(' s 279
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        StringLiteral s 118
        <Value> g 280


State 215
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 281
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 216
        '-' r 153
        '!=' r 153
        '%' r 153
        '&' r 153
        '&&' r 153
        '&=' r 153
        ')' r 153
        '*' r 153
        '*=' r 153
        ',' r 153
        '/' r 153
        '/=' r 153
        ':' r 153
        ';' r 153
        '?' r 153
        ']' r 153
        '^' r 153
        '^=' r 153
        '|' r 153
        '||' r 153
        '|=' r 153
        '+' r 153
        '+=' r 153
        '<' r 153
        '<<' r 153
        '<<=' r 153
        '<=' r 153
        '=' r 153
        '-=' r 153
        '==' r 153
        '>' r 153
        '>=' r 153
        '>>' r 153
        '>>=' r 153


State 217
        '(' s 279
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        StringLiteral s 118
        <Value> g 282


State 218
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 283
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Unary> g 133
        <Value> g 134


State 219
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 284
        <Op Mult> g 129
        <Op Pointer> g 131
        <Op Unary> g 133
        <Value> g 134


State 220
        ',' r 34
        ';' r 34


State 221
        (EOF) r 30
        '-' r 30
        '--' r 30
        '!' r 30
        '&' r 30
        '(' r 30
        '*' r 30
        ';' r 30
        '{' r 30
        '}' r 30
        '~' r 30
        '++' r 30
        auto r 30
        break r 30
        case r 30
        char r 30
        CharLiteral r 30
        const r 30
        continue r 30
        DecLiteral r 30
        default r 30
        do r 30
        double r 30
        enum r 30
        extern r 30
        float r 30
        FloatLiteral r 30
        for r 30
        goto r 30
        HexLiteral r 30
        Id r 30
        if r 30
        int r 30
        long r 30
        OctLiteral r 30
        register r 30
        return r 30
        short r 30
        signed r 30
        sizeof r 30
        static r 30
        StringLiteral r 30
        struct r 30
        switch r 30
        typedef r 30
        union r 30
        unsigned r 30
        void r 30
        volatile r 30
        while r 30


State 222
        ',' r 40
        ';' r 40


State 223
        ';' r 38


State 224
        ',' r 53
        '}' r 53


State 225
        ',' r 52
        '}' r 52


State 226
        ',' r 51
        '}' r 51


State 227
        (EOF) r 47
        auto r 47
        char r 47
        const r 47
        double r 47
        enum r 47
        extern r 47
        float r 47
        Id r 47
        int r 47
        long r 47
        register r 47
        short r 47
        signed r 47
        static r 47
        struct r 47
        typedef r 47
        union r 47
        unsigned r 47
        void r 47
        volatile r 47


State 228
        '}' r 48


State 229
        (EOF) r 26
        auto r 26
        char r 26
        const r 26
        double r 26
        enum r 26
        extern r 26
        float r 26
        Id r 26
        int r 26
        long r 26
        register r 26
        short r 26
        signed r 26
        static r 26
        struct r 26
        typedef r 26
        union r 26
        unsigned r 26
        void r 26
        volatile r 26


State 230
        (EOF) r 27
        auto r 27
        char r 27
        const r 27
        double r 27
        enum r 27
        extern r 27
        float r 27
        Id r 27
        int r 27
        long r 27
        register r 27
        short r 27
        signed r 27
        static r 27
        struct r 27
        typedef r 27
        union r 27
        unsigned r 27
        void r 27
        volatile r 27


State 231
        '-' r 91
        '--' r 91
        '!' r 91
        '&' r 91
        '(' r 91
        '*' r 91
        ';' r 91
        '{' r 91
        '}' r 91
        '~' r 91
        '++' r 91
        auto r 91
        break r 91
        case r 91
        char r 91
        CharLiteral r 91
        const r 91
        continue r 91
        DecLiteral r 91
        default r 91
        do r 91
        double r 91
        else r 91
        enum r 91
        extern r 91
        float r 91
        FloatLiteral r 91
        for r 91
        goto r 91
        HexLiteral r 91
        Id r 91
        if r 91
        int r 91
        long r 91
        OctLiteral r 91
        register r 91
        return r 91
        short r 91
        signed r 91
        sizeof r 91
        static r 91
        StringLiteral r 91
        struct r 91
        switch r 91
        union r 91
        unsigned r 91
        void r 91
        volatile r 91
        while r 91


State 232
        '-' r 92
        '--' r 92
        '!' r 92
        '&' r 92
        '(' r 92
        '*' r 92
        ';' r 92
        '{' r 92
        '}' r 92
        '~' r 92
        '++' r 92
        auto r 92
        break r 92
        case r 92
        char r 92
        CharLiteral r 92
        const r 92
        continue r 92
        DecLiteral r 92
        default r 92
        do r 92
        double r 92
        else r 92
        enum r 92
        extern r 92
        float r 92
        FloatLiteral r 92
        for r 92
        goto r 92
        HexLiteral r 92
        Id r 92
        if r 92
        int r 92
        long r 92
        OctLiteral r 92
        register r 92
        return r 92
        short r 92
        signed r 92
        sizeof r 92
        static r 92
        StringLiteral r 92
        struct r 92
        switch r 92
        union r 92
        unsigned r 92
        void r 92
        volatile r 92
        while r 92


State 233
        while s 285


State 234
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 286
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ';' r 96


State 235
        ';' s 288


State 236
        '-' r 76
        '--' r 76
        '!' r 76
        '&' r 76
        '(' r 76
        '*' r 76
        ';' r 76
        '{' r 76
        '}' r 76
        '~' r 76
        '++' r 76
        auto r 76
        break r 76
        case r 76
        char r 76
        CharLiteral r 76
        const r 76
        continue r 76
        DecLiteral r 76
        default r 76
        do r 76
        double r 76
        enum r 76
        extern r 76
        float r 76
        FloatLiteral r 76
        for r 76
        goto r 76
        HexLiteral r 76
        Id r 76
        if r 76
        int r 76
        long r 76
        OctLiteral r 76
        register r 76
        return r 76
        short r 76
        signed r 76
        sizeof r 76
        static r 76
        StringLiteral r 76
        struct r 76
        switch r 76
        union r 76
        unsigned r 76
        void r 76
        volatile r 76
        while r 76


State 237
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 289
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 238
        ',' s 184
        ';' s 290


State 239
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 291
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 240
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 292
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 241
        '-' r 89
        '--' r 89
        '!' r 89
        '&' r 89
        '(' r 89
        '*' r 89
        ';' r 89
        '{' r 89
        '}' r 89
        '~' r 89
        '++' r 89
        auto r 89
        break r 89
        case r 89
        char r 89
        CharLiteral r 89
        const r 89
        continue r 89
        DecLiteral r 89
        default r 89
        do r 89
        double r 89
        else r 89
        enum r 89
        extern r 89
        float r 89
        FloatLiteral r 89
        for r 89
        goto r 89
        HexLiteral r 89
        Id r 89
        if r 89
        int r 89
        long r 89
        OctLiteral r 89
        register r 89
        return r 89
        short r 89
        signed r 89
        sizeof r 89
        static r 89
        StringLiteral r 89
        struct r 89
        switch r 89
        union r 89
        unsigned r 89
        void r 89
        volatile r 89
        while r 89


State 242
        '}' r 101
        case r 101
        default r 101


State 243
        (EOF) r 100
        '-' r 100
        '--' r 100
        '!' r 100
        '&' r 100
        '(' r 100
        '*' r 100
        ';' r 100
        '{' r 100
        '}' r 100
        '~' r 100
        '++' r 100
        auto r 100
        break r 100
        case r 100
        char r 100
        CharLiteral r 100
        const r 100
        continue r 100
        DecLiteral r 100
        default r 100
        do r 100
        double r 100
        else r 100
        enum r 100
        extern r 100
        float r 100
        FloatLiteral r 100
        for r 100
        goto r 100
        HexLiteral r 100
        Id r 100
        if r 100
        int r 100
        long r 100
        OctLiteral r 100
        register r 100
        return r 100
        short r 100
        signed r 100
        sizeof r 100
        static r 100
        StringLiteral r 100
        struct r 100
        switch r 100
        typedef r 100
        union r 100
        unsigned r 100
        void r 100
        volatile r 100
        while r 100


State 244
        (EOF) r 13
        auto r 13
        char r 13
        const r 13
        double r 13
        enum r 13
        extern r 13
        float r 13
        Id r 13
        int r 13
        long r 13
        register r 13
        short r 13
        signed r 13
        static r 13
        struct r 13
        typedef r 13
        union r 13
        unsigned r 13
        void r 13
        volatile r 13


State 245
        '-' r 172
        '--' r 172
        '!=' r 172
        '%' r 172
        '&' r 172
        '&&' r 172
        '&=' r 172
        ')' r 172
        '*' r 172
        '*=' r 172
        ',' r 172
        '.' r 172
        '/' r 172
        '/=' r 172
        ':' r 172
        ';' r 172
        '?' r 172
        '[' r 172
        ']' r 172
        '^' r 172
        '^=' r 172
        '|' r 172
        '||' r 172
        '|=' r 172
        '+' r 172
        '++' r 172
        '+=' r 172
        '<' r 172
        '<<' r 172
        '<<=' r 172
        '<=' r 172
        '=' r 172
        '-=' r 172
        '==' r 172
        '>' r 172
        '->' r 172
        '>=' r 172
        '>>' r 172
        '>>=' r 172


State 246
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Pointer> g 131
        <Op Unary> g 293
        <Value> g 134


State 247
        '-' r 170
        '--' r 170
        '!=' r 170
        '%' r 170
        '&' r 170
        '&&' r 170
        '&=' r 170
        ')' r 170
        '*' r 170
        '*=' r 170
        ',' r 170
        '.' r 170
        '/' r 170
        '/=' r 170
        ':' r 170
        ';' r 170
        '?' r 170
        '[' r 170
        ']' r 170
        '^' r 170
        '^=' r 170
        '|' r 170
        '||' r 170
        '|=' r 170
        '+' r 170
        '++' r 170
        '+=' r 170
        '<' r 170
        '<<' r 170
        '<<=' r 170
        '<=' r 170
        '=' r 170
        '-=' r 170
        '==' r 170
        '>' r 170
        '->' r 170
        '>=' r 170
        '>>' r 170
        '>>=' r 170


State 248
        ')' s 294
        ',' s 184


State 249
        '*' s 37
        <Pointers> g 295
        ')' r 74


State 250
        ')' s 296


State 251
        ')' r 103
        ',' r 103
        ';' r 103
        ']' r 103


State 252
        '%' s 208
        '*' s 209
        '/' s 210
        '-' r 140
        '!=' r 140
        '&' r 140
        '&&' r 140
        '&=' r 140
        ')' r 140
        '*=' r 140
        ',' r 140
        '/=' r 140
        ':' r 140
        ';' r 140
        '?' r 140
        ']' r 140
        '^' r 140
        '^=' r 140
        '|' r 140
        '||' r 140
        '|=' r 140
        '+' r 140
        '+=' r 140
        '<' r 140
        '<<' r 140
        '<<=' r 140
        '<=' r 140
        '=' r 140
        '-=' r 140
        '==' r 140
        '>' r 140
        '>=' r 140
        '>>' r 140
        '>>=' r 140


State 253
        '%' s 208
        '*' s 209
        '/' s 210
        '-' r 139
        '!=' r 139
        '&' r 139
        '&&' r 139
        '&=' r 139
        ')' r 139
        '*=' r 139
        ',' r 139
        '/=' r 139
        ':' r 139
        ';' r 139
        '?' r 139
        ']' r 139
        '^' r 139
        '^=' r 139
        '|' r 139
        '||' r 139
        '|=' r 139
        '+' r 139
        '+=' r 139
        '<' r 139
        '<<' r 139
        '<<=' r 139
        '<=' r 139
        '=' r 139
        '-=' r 139
        '==' r 139
        '>' r 139
        '>=' r 139
        '>>' r 139
        '>>=' r 139


State 254
        '|' s 190
        '&&' r 120
        '&=' r 120
        ')' r 120
        '*=' r 120
        ',' r 120
        '/=' r 120
        ':' r 120
        ';' r 120
        '?' r 120
        ']' r 120
        '^=' r 120
        '||' r 120
        '|=' r 120
        '+=' r 120
        '<<=' r 120
        '=' r 120
        '-=' r 120
        '>>=' r 120


State 255
        '!=' s 196
        '==' s 197
        '&' r 126
        '&&' r 126
        '&=' r 126
        ')' r 126
        '*=' r 126
        ',' r 126
        '/=' r 126
        ':' r 126
        ';' r 126
        '?' r 126
        ']' r 126
        '^' r 126
        '^=' r 126
        '|' r 126
        '||' r 126
        '|=' r 126
        '+=' r 126
        '<<=' r 126
        '=' r 126
        '-=' r 126
        '>>=' r 126


State 256
        '^' s 191
        '&&' r 122
        '&=' r 122
        ')' r 122
        '*=' r 122
        ',' r 122
        '/=' r 122
        ':' r 122
        ';' r 122
        '?' r 122
        ']' r 122
        '^=' r 122
        '|' r 122
        '||' r 122
        '|=' r 122
        '+=' r 122
        '<<=' r 122
        '=' r 122
        '-=' r 122
        '>>=' r 122


State 257
        '&' s 189
        '&&' r 124
        '&=' r 124
        ')' r 124
        '*=' r 124
        ',' r 124
        '/=' r 124
        ':' r 124
        ';' r 124
        '?' r 124
        ']' r 124
        '^' r 124
        '^=' r 124
        '|' r 124
        '||' r 124
        '|=' r 124
        '+=' r 124
        '<<=' r 124
        '=' r 124
        '-=' r 124
        '>>=' r 124


State 258
        '<<' s 218
        '>>' s 219
        '!=' r 131
        '&' r 131
        '&&' r 131
        '&=' r 131
        ')' r 131
        '*=' r 131
        ',' r 131
        '/=' r 131
        ':' r 131
        ';' r 131
        '?' r 131
        ']' r 131
        '^' r 131
        '^=' r 131
        '|' r 131
        '||' r 131
        '|=' r 131
        '+=' r 131
        '<' r 131
        '<<=' r 131
        '<=' r 131
        '=' r 131
        '-=' r 131
        '==' r 131
        '>' r 131
        '>=' r 131
        '>>=' r 131


State 259
        '<<' s 218
        '>>' s 219
        '!=' r 133
        '&' r 133
        '&&' r 133
        '&=' r 133
        ')' r 133
        '*=' r 133
        ',' r 133
        '/=' r 133
        ':' r 133
        ';' r 133
        '?' r 133
        ']' r 133
        '^' r 133
        '^=' r 133
        '|' r 133
        '||' r 133
        '|=' r 133
        '+=' r 133
        '<' r 133
        '<<=' r 133
        '<=' r 133
        '=' r 133
        '-=' r 133
        '==' r 133
        '>' r 133
        '>=' r 133
        '>>=' r 133


State 260
        '<<' s 218
        '>>' s 219
        '!=' r 132
        '&' r 132
        '&&' r 132
        '&=' r 132
        ')' r 132
        '*=' r 132
        ',' r 132
        '/=' r 132
        ':' r 132
        ';' r 132
        '?' r 132
        ']' r 132
        '^' r 132
        '^=' r 132
        '|' r 132
        '||' r 132
        '|=' r 132
        '+=' r 132
        '<' r 132
        '<<=' r 132
        '<=' r 132
        '=' r 132
        '-=' r 132
        '==' r 132
        '>' r 132
        '>=' r 132
        '>>=' r 132


State 261
        '<<' s 218
        '>>' s 219
        '!=' r 134
        '&' r 134
        '&&' r 134
        '&=' r 134
        ')' r 134
        '*=' r 134
        ',' r 134
        '/=' r 134
        ':' r 134
        ';' r 134
        '?' r 134
        ']' r 134
        '^' r 134
        '^=' r 134
        '|' r 134
        '||' r 134
        '|=' r 134
        '+=' r 134
        '<' r 134
        '<<=' r 134
        '<=' r 134
        '=' r 134
        '-=' r 134
        '==' r 134
        '>' r 134
        '>=' r 134
        '>>=' r 134


State 262
        '<' s 192
        '<=' s 193
        '>' s 194
        '>=' s 195
        '!=' r 129
        '&' r 129
        '&&' r 129
        '&=' r 129
        ')' r 129
        '*=' r 129
        ',' r 129
        '/=' r 129
        ':' r 129
        ';' r 129
        '?' r 129
        ']' r 129
        '^' r 129
        '^=' r 129
        '|' r 129
        '||' r 129
        '|=' r 129
        '+=' r 129
        '<<=' r 129
        '=' r 129
        '-=' r 129
        '==' r 129
        '>>=' r 129


State 263
        '<' s 192
        '<=' s 193
        '>' s 194
        '>=' s 195
        '!=' r 128
        '&' r 128
        '&&' r 128
        '&=' r 128
        ')' r 128
        '*=' r 128
        ',' r 128
        '/=' r 128
        ':' r 128
        ';' r 128
        '?' r 128
        ']' r 128
        '^' r 128
        '^=' r 128
        '|' r 128
        '||' r 128
        '|=' r 128
        '+=' r 128
        '<<=' r 128
        '=' r 128
        '-=' r 128
        '==' r 128
        '>>=' r 128


State 264
        ')' r 111
        ',' r 111
        ';' r 111
        ']' r 111


State 265
        ')' r 108
        ',' r 108
        ';' r 108
        ']' r 108


State 266
        ')' r 109
        ',' r 109
        ';' r 109
        ']' r 109


State 267
        ')' r 110
        ',' r 110
        ';' r 110
        ']' r 110


State 268
        ')' r 112
        ',' r 112
        ';' r 112
        ']' r 112


State 269
        ')' r 106
        ',' r 106
        ';' r 106
        ']' r 106


State 270
        ')' r 114
        ',' r 114
        ';' r 114
        ']' r 114


State 271
        ')' r 105
        ',' r 105
        ';' r 105
        ']' r 105


State 272
        ')' r 107
        ',' r 107
        ';' r 107
        ']' r 107


State 273
        ')' r 113
        ',' r 113
        ';' r 113
        ']' r 113


State 274
        '-' r 144
        '!=' r 144
        '%' r 144
        '&' r 144
        '&&' r 144
        '&=' r 144
        ')' r 144
        '*' r 144
        '*=' r 144
        ',' r 144
        '/' r 144
        '/=' r 144
        ':' r 144
        ';' r 144
        '?' r 144
        ']' r 144
        '^' r 144
        '^=' r 144
        '|' r 144
        '||' r 144
        '|=' r 144
        '+' r 144
        '+=' r 144
        '<' r 144
        '<<' r 144
        '<<=' r 144
        '<=' r 144
        '=' r 144
        '-=' r 144
        '==' r 144
        '>' r 144
        '>=' r 144
        '>>' r 144
        '>>=' r 144


State 275
        '-' r 142
        '!=' r 142
        '%' r 142
        '&' r 142
        '&&' r 142
        '&=' r 142
        ')' r 142
        '*' r 142
        '*=' r 142
        ',' r 142
        '/' r 142
        '/=' r 142
        ':' r 142
        ';' r 142
        '?' r 142
        ']' r 142
        '^' r 142
        '^=' r 142
        '|' r 142
        '||' r 142
        '|=' r 142
        '+' r 142
        '+=' r 142
        '<' r 142
        '<<' r 142
        '<<=' r 142
        '<=' r 142
        '=' r 142
        '-=' r 142
        '==' r 142
        '>' r 142
        '>=' r 142
        '>>' r 142
        '>>=' r 142


State 276
        '-' r 143
        '!=' r 143
        '%' r 143
        '&' r 143
        '&&' r 143
        '&=' r 143
        ')' r 143
        '*' r 143
        '*=' r 143
        ',' r 143
        '/' r 143
        '/=' r 143
        ':' r 143
        ';' r 143
        '?' r 143
        ']' r 143
        '^' r 143
        '^=' r 143
        '|' r 143
        '||' r 143
        '|=' r 143
        '+' r 143
        '+=' r 143
        '<' r 143
        '<<' r 143
        '<<=' r 143
        '<=' r 143
        '=' r 143
        '-=' r 143
        '==' r 143
        '>' r 143
        '>=' r 143
        '>>' r 143
        '>>=' r 143


State 277
        ':' s 297


State 278
        '&&' s 188
        '&=' r 118
        ')' r 118
        '*=' r 118
        ',' r 118
        '/=' r 118
        ':' r 118
        ';' r 118
        '?' r 118
        ']' r 118
        '^=' r 118
        '||' r 118
        '|=' r 118
        '+=' r 118
        '<<=' r 118
        '=' r 118
        '-=' r 118
        '>>=' r 118


State 279
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 177
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 280
        '-' r 159
        '--' r 159
        '!=' r 159
        '%' r 159
        '&' r 159
        '&&' r 159
        '&=' r 159
        ')' r 159
        '*' r 159
        '*=' r 159
        ',' r 159
        '.' r 159
        '/' r 159
        '/=' r 159
        ':' r 159
        ';' r 159
        '?' r 159
        '[' r 159
        ']' r 159
        '^' r 159
        '^=' r 159
        '|' r 159
        '||' r 159
        '|=' r 159
        '+' r 159
        '++' r 159
        '+=' r 159
        '<' r 159
        '<<' r 159
        '<<=' r 159
        '<=' r 159
        '=' r 159
        '-=' r 159
        '==' r 159
        '>' r 159
        '->' r 159
        '>=' r 159
        '>>' r 159
        '>>=' r 159


State 281
        ',' s 184
        ']' s 298


State 282
        '-' r 160
        '--' r 160
        '!=' r 160
        '%' r 160
        '&' r 160
        '&&' r 160
        '&=' r 160
        ')' r 160
        '*' r 160
        '*=' r 160
        ',' r 160
        '.' r 160
        '/' r 160
        '/=' r 160
        ':' r 160
        ';' r 160
        '?' r 160
        '[' r 160
        ']' r 160
        '^' r 160
        '^=' r 160
        '|' r 160
        '||' r 160
        '|=' r 160
        '+' r 160
        '++' r 160
        '+=' r 160
        '<' r 160
        '<<' r 160
        '<<=' r 160
        '<=' r 160
        '=' r 160
        '-=' r 160
        '==' r 160
        '>' r 160
        '->' r 160
        '>=' r 160
        '>>' r 160
        '>>=' r 160


State 283
        '-' s 186
        '+' s 187
        '!=' r 136
        '&' r 136
        '&&' r 136
        '&=' r 136
        ')' r 136
        '*=' r 136
        ',' r 136
        '/=' r 136
        ':' r 136
        ';' r 136
        '?' r 136
        ']' r 136
        '^' r 136
        '^=' r 136
        '|' r 136
        '||' r 136
        '|=' r 136
        '+=' r 136
        '<' r 136
        '<<' r 136
        '<<=' r 136
        '<=' r 136
        '=' r 136
        '-=' r 136
        '==' r 136
        '>' r 136
        '>=' r 136
        '>>' r 136
        '>>=' r 136


State 284
        '-' s 186
        '+' s 187
        '!=' r 137
        '&' r 137
        '&&' r 137
        '&=' r 137
        ')' r 137
        '*=' r 137
        ',' r 137
        '/=' r 137
        ':' r 137
        ';' r 137
        '?' r 137
        ']' r 137
        '^' r 137
        '^=' r 137
        '|' r 137
        '||' r 137
        '|=' r 137
        '+=' r 137
        '<' r 137
        '<<' r 137
        '<<=' r 137
        '<=' r 137
        '=' r 137
        '-=' r 137
        '==' r 137
        '>' r 137
        '>=' r 137
        '>>' r 137
        '>>=' r 137


State 285
        '(' s 299


State 286
        ';' s 300


State 287
        ',' s 184
        ')' r 95
        ';' r 95


State 288
        '-' r 90
        '--' r 90
        '!' r 90
        '&' r 90
        '(' r 90
        '*' r 90
        ';' r 90
        '{' r 90
        '}' r 90
        '~' r 90
        '++' r 90
        auto r 90
        break r 90
        case r 90
        char r 90
        CharLiteral r 90
        const r 90
        continue r 90
        DecLiteral r 90
        default r 90
        do r 90
        double r 90
        else r 90
        enum r 90
        extern r 90
        float r 90
        FloatLiteral r 90
        for r 90
        goto r 90
        HexLiteral r 90
        Id r 90
        if r 90
        int r 90
        long r 90
        OctLiteral r 90
        register r 90
        return r 90
        short r 90
        signed r 90
        sizeof r 90
        static r 90
        StringLiteral r 90
        struct r 90
        switch r 90
        union r 90
        unsigned r 90
        void r 90
        volatile r 90
        while r 90


State 289
        ')' s 301
        ',' s 184


State 290
        '-' r 93
        '--' r 93
        '!' r 93
        '&' r 93
        '(' r 93
        '*' r 93
        ';' r 93
        '{' r 93
        '}' r 93
        '~' r 93
        '++' r 93
        auto r 93
        break r 93
        case r 93
        char r 93
        CharLiteral r 93
        const r 93
        continue r 93
        DecLiteral r 93
        default r 93
        do r 93
        double r 93
        else r 93
        enum r 93
        extern r 93
        float r 93
        FloatLiteral r 93
        for r 93
        goto r 93
        HexLiteral r 93
        Id r 93
        if r 93
        int r 93
        long r 93
        OctLiteral r 93
        register r 93
        return r 93
        short r 93
        signed r 93
        sizeof r 93
        static r 93
        StringLiteral r 93
        struct r 93
        switch r 93
        union r 93
        unsigned r 93
        void r 93
        volatile r 93
        while r 93


State 291
        ')' s 302
        ',' s 184


State 292
        ')' s 303
        ',' s 184


State 293
        '-' r 155
        '!=' r 155
        '%' r 155
        '&' r 155
        '&&' r 155
        '&=' r 155
        ')' r 155
        '*' r 155
        '*=' r 155
        ',' r 155
        '/' r 155
        '/=' r 155
        ':' r 155
        ';' r 155
        '?' r 155
        ']' r 155
        '^' r 155
        '^=' r 155
        '|' r 155
        '||' r 155
        '|=' r 155
        '+' r 155
        '+=' r 155
        '<' r 155
        '<<' r 155
        '<<=' r 155
        '<=' r 155
        '=' r 155
        '-=' r 155
        '==' r 155
        '>' r 155
        '>=' r 155
        '>>' r 155
        '>>=' r 155


State 294
        '-' r 169
        '--' r 169
        '!=' r 169
        '%' r 169
        '&' r 169
        '&&' r 169
        '&=' r 169
        ')' r 169
        '*' r 169
        '*=' r 169
        ',' r 169
        '.' r 169
        '/' r 169
        '/=' r 169
        ':' r 169
        ';' r 169
        '?' r 169
        '[' r 169
        ']' r 169
        '^' r 169
        '^=' r 169
        '|' r 169
        '||' r 169
        '|=' r 169
        '+' r 169
        '++' r 169
        '+=' r 169
        '<' r 169
        '<<' r 169
        '<<=' r 169
        '<=' r 169
        '=' r 169
        '-=' r 169
        '==' r 169
        '>' r 169
        '->' r 169
        '>=' r 169
        '>>' r 169
        '>>=' r 169


State 295
        ')' s 304


State 296
        '-' r 156
        '!=' r 156
        '%' r 156
        '&' r 156
        '&&' r 156
        '&=' r 156
        ')' r 156
        '*' r 156
        '*=' r 156
        ',' r 156
        '/' r 156
        '/=' r 156
        ':' r 156
        ';' r 156
        '?' r 156
        ']' r 156
        '^' r 156
        '^=' r 156
        '|' r 156
        '||' r 156
        '|=' r 156
        '+' r 156
        '+=' r 156
        '<' r 156
        '<<' r 156
        '<<=' r 156
        '<=' r 156
        '=' r 156
        '-=' r 156
        '==' r 156
        '>' r 156
        '>=' r 156
        '>>' r 156
        '>>=' r 156


State 297
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Op Add> g 120
        <Op And> g 121
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 305
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 298
        '-' r 161
        '--' r 161
        '!=' r 161
        '%' r 161
        '&' r 161
        '&&' r 161
        '&=' r 161
        ')' r 161
        '*' r 161
        '*=' r 161
        ',' r 161
        '.' r 161
        '/' r 161
        '/=' r 161
        ':' r 161
        ';' r 161
        '?' r 161
        '[' r 161
        ']' r 161
        '^' r 161
        '^=' r 161
        '|' r 161
        '||' r 161
        '|=' r 161
        '+' r 161
        '++' r 161
        '+=' r 161
        '<' r 161
        '<<' r 161
        '<<=' r 161
        '<=' r 161
        '=' r 161
        '-=' r 161
        '==' r 161
        '>' r 161
        '->' r 161
        '>=' r 161
        '>>' r 161
        '>>=' r 161


State 299
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 306
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 300
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 307
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ';' r 96


State 301
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 308
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 309
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 310
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 311
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 312
        <Then Stm> g 313
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 302
        '{' s 314


State 303
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 315
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 304
        '-' r 157
        '!=' r 157
        '%' r 157
        '&' r 157
        '&&' r 157
        '&=' r 157
        ')' r 157
        '*' r 157
        '*=' r 157
        ',' r 157
        '/' r 157
        '/=' r 157
        ':' r 157
        ';' r 157
        '?' r 157
        ']' r 157
        '^' r 157
        '^=' r 157
        '|' r 157
        '||' r 157
        '|=' r 157
        '+' r 157
        '+=' r 157
        '<' r 157
        '<<' r 157
        '<<=' r 157
        '<=' r 157
        '=' r 157
        '-=' r 157
        '==' r 157
        '>' r 157
        '>=' r 157
        '>>' r 157
        '>>=' r 157


State 305
        '&=' r 116
        ')' r 116
        '*=' r 116
        ',' r 116
        '/=' r 116
        ':' r 116
        ';' r 116
        ']' r 116
        '^=' r 116
        '|=' r 116
        '+=' r 116
        '<<=' r 116
        '=' r 116
        '-=' r 116
        '>>=' r 116


State 306
        ')' s 316
        ',' s 184


State 307
        ';' s 317


State 308
        '(' s 318


State 309
        '(' s 319


State 310
        '(' s 320


State 311
        '-' r 81
        '--' r 81
        '!' r 81
        '&' r 81
        '(' r 81
        '*' r 81
        ';' r 81
        '{' r 81
        '}' r 81
        '~' r 81
        '++' r 81
        auto r 81
        break r 81
        case r 81
        char r 81
        CharLiteral r 81
        const r 81
        continue r 81
        DecLiteral r 81
        default r 81
        do r 81
        double r 81
        enum r 81
        extern r 81
        float r 81
        FloatLiteral r 81
        for r 81
        goto r 81
        HexLiteral r 81
        Id r 81
        if r 81
        int r 81
        long r 81
        OctLiteral r 81
        register r 81
        return r 81
        short r 81
        signed r 81
        sizeof r 81
        static r 81
        StringLiteral r 81
        struct r 81
        switch r 81
        union r 81
        unsigned r 81
        void r 81
        volatile r 81
        while r 81
        else r 85


State 312
        '-' r 77
        '--' r 77
        '!' r 77
        '&' r 77
        '(' r 77
        '*' r 77
        ';' r 77
        '{' r 77
        '}' r 77
        '~' r 77
        '++' r 77
        auto r 77
        break r 77
        case r 77
        char r 77
        CharLiteral r 77
        const r 77
        continue r 77
        DecLiteral r 77
        default r 77
        do r 77
        double r 77
        enum r 77
        extern r 77
        float r 77
        FloatLiteral r 77
        for r 77
        goto r 77
        HexLiteral r 77
        Id r 77
        if r 77
        int r 77
        long r 77
        OctLiteral r 77
        register r 77
        return r 77
        short r 77
        signed r 77
        sizeof r 77
        static r 77
        StringLiteral r 77
        struct r 77
        switch r 77
        union r 77
        unsigned r 77
        void r 77
        volatile r 77
        while r 77


State 313
        else s 321


State 314
        case s 322
        default s 323
        <Case Stms> g 324
        '}' r 99


State 315
        '-' r 79
        '--' r 79
        '!' r 79
        '&' r 79
        '(' r 79
        '*' r 79
        ';' r 79
        '{' r 79
        '}' r 79
        '~' r 79
        '++' r 79
        auto r 79
        break r 79
        case r 79
        char r 79
        CharLiteral r 79
        const r 79
        continue r 79
        DecLiteral r 79
        default r 79
        do r 79
        double r 79
        enum r 79
        extern r 79
        float r 79
        FloatLiteral r 79
        for r 79
        goto r 79
        HexLiteral r 79
        Id r 79
        if r 79
        int r 79
        long r 79
        OctLiteral r 79
        register r 79
        return r 79
        short r 79
        signed r 79
        sizeof r 79
        static r 79
        StringLiteral r 79
        struct r 79
        switch r 79
        union r 79
        unsigned r 79
        void r 79
        volatile r 79
        while r 79


State 316
        '-' r 86
        '--' r 86
        '!' r 86
        '&' r 86
        '(' r 86
        '*' r 86
        ';' r 86
        '{' r 86
        '}' r 86
        '~' r 86
        '++' r 86
        auto r 86
        break r 86
        case r 86
        char r 86
        CharLiteral r 86
        const r 86
        continue r 86
        DecLiteral r 86
        default r 86
        do r 86
        double r 86
        else r 86
        enum r 86
        extern r 86
        float r 86
        FloatLiteral r 86
        for r 86
        goto r 86
        HexLiteral r 86
        Id r 86
        if r 86
        int r 86
        long r 86
        OctLiteral r 86
        register r 86
        return r 86
        short r 86
        signed r 86
        sizeof r 86
        static r 86
        StringLiteral r 86
        struct r 86
        switch r 86
        union r 86
        unsigned r 86
        void r 86
        volatile r 86
        while r 86


State 317
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 325
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ')' r 96


State 318
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 326
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ';' r 96


State 319
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 327
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 320
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Expr> g 328
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134


State 321
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 329
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 322
        '(' s 279
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        StringLiteral s 118
        <Value> g 330


State 323
        ':' s 331


State 324
        '}' s 332


State 325
        ')' s 333


State 326
        ';' s 334


State 327
        ')' s 335
        ',' s 184


State 328
        ')' s 336
        ',' s 184


State 329
        '-' r 78
        '--' r 78
        '!' r 78
        '&' r 78
        '(' r 78
        '*' r 78
        ';' r 78
        '{' r 78
        '}' r 78
        '~' r 78
        '++' r 78
        auto r 78
        break r 78
        case r 78
        char r 78
        CharLiteral r 78
        const r 78
        continue r 78
        DecLiteral r 78
        default r 78
        do r 78
        double r 78
        enum r 78
        extern r 78
        float r 78
        FloatLiteral r 78
        for r 78
        goto r 78
        HexLiteral r 78
        Id r 78
        if r 78
        int r 78
        long r 78
        OctLiteral r 78
        register r 78
        return r 78
        short r 78
        signed r 78
        sizeof r 78
        static r 78
        StringLiteral r 78
        struct r 78
        switch r 78
        union r 78
        unsigned r 78
        void r 78
        volatile r 78
        while r 78


State 330
        ':' s 337


State 331
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 160
        <Stm List> g 338
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63
        '}' r 102


State 332
        '-' r 87
        '--' r 87
        '!' r 87
        '&' r 87
        '(' r 87
        '*' r 87
        ';' r 87
        '{' r 87
        '}' r 87
        '~' r 87
        '++' r 87
        auto r 87
        break r 87
        case r 87
        char r 87
        CharLiteral r 87
        const r 87
        continue r 87
        DecLiteral r 87
        default r 87
        do r 87
        double r 87
        else r 87
        enum r 87
        extern r 87
        float r 87
        FloatLiteral r 87
        for r 87
        goto r 87
        HexLiteral r 87
        Id r 87
        if r 87
        int r 87
        long r 87
        OctLiteral r 87
        register r 87
        return r 87
        short r 87
        signed r 87
        sizeof r 87
        static r 87
        StringLiteral r 87
        struct r 87
        switch r 87
        union r 87
        unsigned r 87
        void r 87
        volatile r 87
        while r 87


State 333
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 339
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 334
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 340
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ';' r 96


State 335
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 308
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 309
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 310
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 311
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 312
        <Then Stm> g 341
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 336
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 308
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 309
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 310
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 311
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 315
        <Then Stm> g 342
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 337
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 150
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 153
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 156
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 159
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 160
        <Stm List> g 343
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63
        '}' r 102
        case r 102
        default r 102


State 338
        '}' r 98


State 339
        '-' r 80
        '--' r 80
        '!' r 80
        '&' r 80
        '(' r 80
        '*' r 80
        ';' r 80
        '{' r 80
        '}' r 80
        '~' r 80
        '++' r 80
        auto r 80
        break r 80
        case r 80
        char r 80
        CharLiteral r 80
        const r 80
        continue r 80
        DecLiteral r 80
        default r 80
        do r 80
        double r 80
        enum r 80
        extern r 80
        float r 80
        FloatLiteral r 80
        for r 80
        goto r 80
        HexLiteral r 80
        Id r 80
        if r 80
        int r 80
        long r 80
        OctLiteral r 80
        register r 80
        return r 80
        short r 80
        signed r 80
        sizeof r 80
        static r 80
        StringLiteral r 80
        struct r 80
        switch r 80
        union r 80
        unsigned r 80
        void r 80
        volatile r 80
        while r 80


State 340
        ';' s 344


State 341
        else s 345


State 342
        else r 83


State 343
        case s 322
        default s 323
        <Case Stms> g 346
        '}' r 99


State 344
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        '~' s 109
        '++' s 110
        CharLiteral s 111
        DecLiteral s 112
        FloatLiteral s 113
        HexLiteral s 114
        Id s 115
        OctLiteral s 116
        sizeof s 117
        StringLiteral s 118
        <Arg> g 347
        <Expr> g 287
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Value> g 134
        ')' r 96


State 345
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 308
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 309
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 310
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 311
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 329
        <Then Stm> g 348
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 346
        '}' r 97


State 347
        ')' s 349


State 348
        else r 82


State 349
        '-' s 102
        '--' s 103
        '!' s 104
        '&' s 105
        '(' s 106
        '*' s 107
        ';' s 146
        '{' s 92
        '~' s 109
        '++' s 110
        auto s 1
        break s 147
        CharLiteral s 111
        const s 2
        continue s 148
        DecLiteral s 112
        do s 149
        enum s 31
        extern s 4
        FloatLiteral s 113
        for s 308
        goto s 151
        HexLiteral s 114
        Id s 152
        if s 309
        OctLiteral s 116
        register s 6
        return s 154
        signed s 7
        sizeof s 117
        static s 8
        StringLiteral s 118
        struct s 32
        switch s 155
        union s 33
        unsigned s 12
        volatile s 13
        while s 310
        <Base> g 14
        <Block> g 157
        <Expr> g 158
        <Mod> g 21
        <Normal Stm> g 311
        <Op Add> g 120
        <Op And> g 121
        <Op Assign> g 122
        <Op BinAND> g 123
        <Op BinOR> g 124
        <Op BinXOR> g 125
        <Op Compare> g 126
        <Op Equate> g 127
        <Op If> g 128
        <Op Mult> g 129
        <Op Or> g 130
        <Op Pointer> g 131
        <Op Shift> g 132
        <Op Unary> g 133
        <Sign> g 22
        <Stm> g 339
        <Then Stm> g 350
        <Type> g 56
        <Value> g 134
        <Var Decl> g 162
        char r 63
        double r 63
        float r 63
        int r 63
        long r 63
        short r 63
        void r 63


State 350
        else r 84




